<controls:MetroWindow x:Class="MicSwitch.MainWindow.Views.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:tb="http://www.hardcodet.net/taskbar"
                      xmlns:blue="http://www.nuget.org/Blue.MVVM"
                      xmlns:hotkeys="clr-namespace:MicSwitch.WPF.Hotkeys"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      xmlns:eye="http://coderush.net/poeeye/"
                      xmlns:viewModels="clr-namespace:MicSwitch.MainWindow.ViewModels"
                      xmlns:fa="http://schemas.fontawesome.io/icons/"
                      mc:Ignorable="d"
                      d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
                      WindowState="{Binding WindowState}"
                      WindowStartupLocation="CenterScreen"
                      ResizeMode="CanMinimize"
                      WindowStyle="SingleBorderWindow"
                      ShowInTaskbar="{Binding ShowInTaskbar, Mode=TwoWay}"
                      Title="{Binding Title}" Width="400" SizeToContent="Height">

    <Grid>
        <DockPanel>
            <tb:TaskbarIcon Visibility="{Binding TrayIconVisibility, Mode=TwoWay}"
                            ToolTipText="{Binding Title}"
                            LeftClickCommand="{Binding ShowAppCommand}"
                            DoubleClickCommand="{Binding ShowAppCommand}">
                <tb:TaskbarIcon.IconSource>
                    <Binding Path="MicrophoneMuted" Converter="{StaticResource MicrophoneMuteStateToIcoConverter}" />
                </tb:TaskbarIcon.IconSource>
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Show main window" Command="{Binding ShowAppCommand}" />
                        <Separator />
                        <MenuItem Header="Exit app" Command="{Binding ExitAppCommand}" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>

            <DockPanel DockPanel.Dock="Top" Margin="3" LastChildFill="True">
                <ComboBox DockPanel.Dock="Top"
                          ItemsSource="{Binding Microphones}"
                          SelectedItem="{Binding MicrophoneLine}"
                          DisplayMemberPath="Name" />
                <Separator DockPanel.Dock="Top" />
                <DockPanel DockPanel.Dock="Top" Margin="0,3" LastChildFill="True">
                    <TextBlock DockPanel.Dock="Left" MinWidth="100"
                               TextAlignment="Right"
                               Text="Volume: " />

                    <TextBlock DockPanel.Dock="Right"
                               MinWidth="50"
                               TextAlignment="Left"
                               Margin="5,0">
                        <TextBlock.Text>
                            <Binding Path="MicrophoneVolume" StringFormat="{}{0:F1}%">
                                <Binding.Converter>
                                    <blue:MultiplyDoubleConverter MinValue="0"
                                                                  Factor="100"
                                                                  MaxValue="100" />
                                </Binding.Converter>
                            </Binding>
                        </TextBlock.Text>
                    </TextBlock>

                    <Slider DockPanel.Dock="Left"
                            Value="{Binding MicrophoneVolume}"
                            Minimum="0" Maximum="1"
                            Margin="5,0"
                            TickFrequency="0.1" />
                </DockPanel>

                <DockPanel DockPanel.Dock="Top" Margin="0,3" LastChildFill="True">
                    <TextBlock DockPanel.Dock="Left" MinWidth="100"
                               TextAlignment="Right"
                               Text="Mute: " />
                    <ToggleButton
                        DockPanel.Dock="Left" HorizontalAlignment="Left"
                        IsChecked="{Binding MicrophoneMuted}" />
                </DockPanel>

                <DockPanel DockPanel.Dock="Top" Margin="0,3" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" MinWidth="100"
                               TextAlignment="Right"
                               Text="Notification: " />
                    <TextBlock DockPanel.Dock="Left" MinWidth="100"
                               TextAlignment="Right"
                               Text="when muted " />
                    <ContentPresenter
                        DockPanel.Dock="Left" HorizontalAlignment="Left"
                        Content="{Binding AudioSelectorWhenMuted}" />
                    <TextBlock DockPanel.Dock="Left"
                               TextAlignment="Right"
                               Text="when un-muted " />
                    <ContentPresenter
                        DockPanel.Dock="Left" HorizontalAlignment="Left"
                        Content="{Binding AudioSelectorWhenUnmuted}" />
                </DockPanel>
            </DockPanel>

            <GroupBox DockPanel.Dock="Top"
                      Header="Hotkey settings"
                      Style="{DynamicResource MaterialDesignGroupBox}"
                      Margin="3"
                      materialDesign:ColorZoneAssist.Mode="Accent"
                      materialDesign:ShadowAssist.ShadowDepth="Depth1"
                      BorderThickness="1">
                <DockPanel>
                    <DockPanel DockPanel.Dock="Top" Margin="0,3" LastChildFill="True">
                        <TextBlock DockPanel.Dock="Left" MinWidth="100"
                                   TextAlignment="Right"
                                   Text="Push-to-talk: " />
                        <ToggleButton
                            DockPanel.Dock="Left" HorizontalAlignment="Left"
                            IsChecked="{Binding IsPushToTalkMode}" />
                    </DockPanel>

                    <DockPanel DockPanel.Dock="Top" Margin="0,3" LastChildFill="True">
                        <TextBlock DockPanel.Dock="Left" MinWidth="100"
                                   TextAlignment="Right"
                                   Text="Hotkey: " />
                        <hotkeys:HotKeyBox HotKey="{Binding Hotkey}" MinWidth="120" />
                        <TextBlock DockPanel.Dock="Left" Text=" or " />
                        <hotkeys:HotKeyBox HotKey="{Binding HotkeyAlt}" MinWidth="120" />
                    </DockPanel>
                </DockPanel>
            </GroupBox>
            
            <DockPanel DockPanel.Dock="Top" Margin="0,3" LastChildFill="True">
                <TextBlock DockPanel.Dock="Left" MinWidth="100"
                           TextAlignment="Right"
                           Text="Run at login: " />
                <ToggleButton
                    DockPanel.Dock="Left" HorizontalAlignment="Left"
                    IsChecked="{Binding RunAtLogin, Mode=OneWay}"
                    Command="{Binding RunAtLoginToggleCommand}"
                    CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
            </DockPanel>

            <DockPanel Dock="Top" Margin="3,5,3,5">
                <Button DockPanel.Dock="Left" Command="{Binding ResetOverlayPositionCommand}" 
                        Margin="0,0,10,0"
                        ToolTip="Reset overlay position to center of the screen"><fa:FontAwesome Icon="Undo"/></Button>
                <Button DockPanel.Dock="Right" Command="{Binding ToggleOverlayLockCommand}">
                    <Button.Content>
                        <Grid>
                            <TextBlock Text="&#xf09c; Unlock overlay"
                                       Visibility="{Binding Overlay.IsLocked, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}" />
                            <TextBlock Text="&#xf023; Lock overlay"
                                       Visibility="{Binding Overlay.IsLocked, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}" />
                        </Grid>
                    </Button.Content>
                </Button>
            </DockPanel>


            <Label Padding="0" />
        </DockPanel>

        <materialDesign:DrawerHost IsBottomDrawerOpen="{Binding ApplicationUpdater.IsOpen}">
            <materialDesign:DrawerHost.BottomDrawerContent>
                <Grid Height="60">
                    <ContentPresenter Content="{Binding ApplicationUpdater}" />
                </Grid>
            </materialDesign:DrawerHost.BottomDrawerContent>
        </materialDesign:DrawerHost>
    </Grid>

    <Window.Icon>
        <Binding Path="MicrophoneMuted" Converter="{StaticResource MicrophoneMuteStateToIcoConverter}" />
    </Window.Icon>

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands ShowSeparators="True">
            <Button
                FontFamily="{StaticResource FontAwesome}"
                Margin="5,0"
                FontWeight="Bold"
                ToolTip="Open PoeEye folder"
                Content="&#xF07C;"
                Command="{Binding OpenAppDataDirectoryCommand}" />
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>


    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands ShowSeparators="True">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter Content="{Binding ApplicationUpdater.CheckForUpdatesCommand}"
                                  ToolTip="Check for updates"
                                  Margin="5,0"
                                  eye:CommandWrapperHelper.Text="&#xF0ED;" />
                <ContentPresenter Content="{Binding ApplicationUpdater.RestartCommand}"
                                  ToolTip="Restart application"
                                  Margin="5,0"
                                  Visibility="{Binding IsDebugMode, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                                  eye:CommandWrapperHelper.Text="&#xf021;" />
            </StackPanel>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
</controls:MetroWindow>